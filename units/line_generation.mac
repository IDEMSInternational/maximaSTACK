/*Functions*/
/*Lines generator*/
/*Outputs two lists, one for each line, where the first list represents the direction vector and the second is point on the line*/
lines_generator(x,y,z):=block(
    [l_1, l_2],
    if x = 1 then (
        l_1: [
            random_permutation([rand_with_step(-5,5,1),rand_with_prohib(-5,5,[0]),rand_with_prohib(-5,5,[0])]),
            random_permutation([rand_with_step(-5,5,1),rand_with_prohib(-5,5,[0]),rand_with_prohib(-5,5,[0])])
        ],
        l_2: [
            if y = 1 then l_1[1] else rand([-2,-1,2])*l_1[1],
            if z = 1 then l_1[2] else l_1[2] + rand([-2,-1,2])*l_1[1]
        ]
    ) elseif x = 2 then (
        l_1: [
            random_permutation([rand_with_step(-5,5,1),rand_with_prohib(-5,5,[0]),rand_with_prohib(-5,5,[0])]),
            random_permutation([rand_with_step(-5,5,1),rand_with_prohib(-5,5,[0]),rand_with_prohib(-5,5,[0])])
        ],
        l_2: [
            if y = 1 then l_1[1] else rand([-2,-1,2])*l_1[1],
            l_1[2]+l_1[1]+[rand([-1,1]),rand([-1,1]),rand([-1,1])]
        ]
    ) elseif x = 3 then (
        l_1: [
            random_permutation([rand_with_step(-5,5,1),rand_with_prohib(-5,5,[0]),rand_with_prohib(-5,5,[0])]),
            random_permutation([rand_with_step(-5,5,1),rand_with_prohib(-5,5,[0]),rand_with_prohib(-5,5,[0])])
        ],
        l_2: [
            l_1[1] + random_permutation([rand(3),rand(3)-1,rand(2)+1]),
            if z = 1 then l_1[2] else l_1[2] + rand([-2,-1,2])*l_1[1]
        ]
    ) elseif x = 4 then (
        l_1: [
            random_permutation([rand_with_step(-5,5,1),rand_with_prohib(-5,5,[0]),rand_with_prohib(-5,5,[0])]),
            random_permutation([rand_with_step(-5,5,1),rand_with_prohib(-5,5,[0]),rand_with_prohib(-5,5,[0])])
        ],
        l_2: [
            l_1[1] + random_permutation([rand(3),rand(3)-1,rand(2)+1]),
            l_1[2] + random_permutation([rand(3),rand(3)-1,rand(2)+1])
        ]
    ),
        return([l_1,l_2])
);

/* Transform set of lines to cartesian form */
/*Input single line in vector form, and parameter chosen and outputs a list of cartesian equations for the line*/
line_to_cartesian(a,b):=block(
    [eq_1,eq_2,eq_3],
    eq_1: x = a[2][1]+b*a[1][1],
    eq_2: y = a[2][2]+b*a[1][2],
    eq_3: z = a[2][3]+b*a[1][3],
    return([eq_1,eq_2,eq_3])
);